# GENERAL CONFIGURATIONS
PORT=4500
APPLICATION="EIMEO"
HTML_FOLDER="/home/b996031/moorea/sources/moorea_imanager/html/"
TOKEN_ATTR_CN="nombre"
TOKEN_ATTR_ORGANIZATION_ID="oficina"
MAIL_ATTR="email"
FIXED_ORGANIZATION_ID="TEST"
SECURE_SERVICES_PATH="security/token/create"
SECURE_SERVICES_ENABLED=False
EMPLOYEE_EXTRA_DATA_ENABLED=True
EMPLOYEE_EXTRA_DATA_METHOD="get_employee_office"
INITIAL_CONFIGURATION_ENABLED=True
INITIAL_CONFIG_PATH="config"
DEV_MODE=True
DEV_MODE_USER={"one_shoot":False, "uid":"dev_mode", "email":"dev_user@moorea.io", "organization_id": "test", "roles":["Administrador"], "cn":"dev_mode"}
DEV_MODE_TOKEN={"token":"UN_TOKEN", "sign":"UN_SIGN", "ACTION":"un_action"}
WILDCARD="*"

# SERVER SOAP CONFIGURATION
WSDL='http://localhost:4501/soap/retrieve?wsdl'
#WSDL="http://ansesarg.anses.gov.ar:4501/soap/retrieve?wsdl"
LOGIN_URL="http://labprueba3/garquitectura/aplicaciones/arg.aspx"
#LOCATION="http://ansesarqdir01.anses.gov.ar:81/DirectorSOA/director.svc/soap11/retrieve"
LOCATION="http://ansesarg.anses.gov.ar:4501/soap/retrieve"
ACTION="http://ansesarg.anses.gov.ar/"
NAMESPACE="http://ansesarg.anses.gov.ar"
CREDENTIALS_XMLNS="http://director.anses.gov.ar"
EXCEPTIONS=False
SOAP_NS='soapenv'
TRACE=True
NS="ans"
PROXY={}

# ROLES MATRIX SERVICE DATA
ANSES_ROLES_MATRIX_WSDL="http://ansesarqdir01.anses.gov.ar:8023/DirectorSOA/GrantForSystemGroup.svc?wsdl"
ANSES_ROLES_MATRIX_EXCEPTIONS=False
ANSES_ROLES_MATRIX_SOAP_NS="soapenv"
ANSES_ROLES_MATRIX_TRACE=True
ANSES_ROLES_MATRIX_NS="ans"
ANSES_ROLES_MATRIX_PROXY={}
ANSES_ROLES_MATRIX_PARSER=lambda matrix: [menu["accion"] for menu in matrix]

# SECURITY CONFIGURATION
ANSES_TOKEN_VALIDATIONS_ENABLED = False
VALIDATION_SIGN_CERT_PATH="/Users/eric/Development/cert_anses.crt"
VALIDATION_SIGN_MSG="La firma no es valida"
VALIDATION_IP_MSG="Su IP no esta habilitada para utilizar la aplicacion"
VALIDATION_EXPIRATION_MSG="Su token ha expirado"

# SERVICES MAPPING
SERVICES=[{
             'pattern':'config/as_array',
             'method':'GET',
             'soap_method':'GetConfigAsArray',
             'params':[]
}, {
             'pattern':'alive/alive',
             'method':'GET',
             'soap_method':'Alive',
             'params':[]
}, {
             'pattern':'api/catalog/get_all',
             'method':'GET',
             'soap_method':'GetCatalog',
             'params':[]
}, {
             'pattern':'api/users/*',
             'method':'GET',           
             'soap_method':'GetUser',
             'params': [{
                        'type':'PATH',
                        'position':2,
                        'name':'username'
                    }]
}, {
             'pattern':'api/forms/bulkload/*',
             'method':'GET',          
             'soap_method':'GetBulkload',
             'params': [{
                        'type':'PATH',
                        'position':3,
                        'name':'formId'
                    }]
}, {
             'pattern':'api/thesauri/*',
             'method':'GET',             
             'soap_method':'GetTesauro',
             'params': [{
                        'type':'PATH',
                        'position':3,
                        'name':'tesauroId'
                    }]
}, {
             'pattern':'api/thesauri/addForm/*',
             'method':'POST',         
             'soap_method':'GetTesauro',
             'params': [{
                        'type':'PATH',
                        'position':3,
                        'name':'tesauroId'
                    }]
}, {
             'pattern':'api/thesauri/update/*',
             'method':'POST',           
             'soap_method':'UpdateTesauroHeader',
             'params': [{
                        'type':'PATH',
                        'position':3,
                        'name':'tesauroId'
                    },{
                        'type':'FORM'
                    }]
}, {
             'pattern':'api/users/addForm',
             'method':'POST',
             'soap_method':'AddFormToUser',
             'params': [{
                        'type':'FORM'
                    }]
}, {
             'pattern':'api/forms/bulkload/*',
             'method':'POST',           
             'soap_method':'PostBulkload',
             'params': [{
                        'type':'JSON'
                    }]
}, {
             'pattern':'api/forms/getAll',
             'method':'POST',           
             'soap_method':'GetAllForms',
             'params': [{
                        'type':'JSON'
                    }]
}, {
             'pattern':'api/forms/validate',
             'method':'POST',             
             'soap_method':'ValidateForm',
             'params': [{
                        'type':'JSON'
                    }]
}, {
             'pattern':'api/forms/header/*',
             'method':'PUT',            
             'soap_method':'UpdateFormHeader',
             'params': [{
                        'type':'JSON'
                    }]
}, {
             'pattern':'api/forms',
             'method':'POST',       
             'soap_method':'CreateForm',
             'params': [{
                        'type':'FORM'
                    }]
}, {
             'pattern':'api/forms/payload/*',
             'method':'PUT',         
             'soap_method':'UpdateFormPayload',
             'params': [{
                        'type':'PATH',
                        'position':3,
                        'name':'formId'
                    },{
                        'type':'JSON'
              }]
}, {
             'pattern':'api/forms/*',
             'method':'GET',
             'soap_method':'GetForm',
             'params': [{
                        'type':'PATH',
                        'position':2,
                        'name':'formId'
             	}]
}, {
             'pattern':'api/users/*/all',
             'method':'GET',            
             'soap_method':'GetUserAll',
             'params': [{
                        'type':'PATH',
                        'position':2,
                        'name':'username'
              }]
}, {
             'pattern':'json/test',
             'method':'POST',           
             'soap_method':'JsonTest',
             'params': [{
                        'type':'JSON'
              }]
}, {
             'pattern':'anses/get_office_children',
             'method':'POST',           
             'soap_method':'get_office_children'
}, {
             'pattern':'form/test',
             'method':'POST',            
             'soap_method':'FormTest',
             'params': [{
                        'type':'FORM'
              }]
}]
